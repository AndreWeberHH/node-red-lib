[
    {
        "id": "1c2088c.95ad877",
        "type": "tab",
        "label": "Automation UI",
        "disabled": false,
        "info": ""
    },
    {
        "id": "481c017d.f2371",
        "type": "realknx-get",
        "z": "1c2088c.95ad877",
        "name": "Get temp.",
        "controller": "b1d2fbe.d184108",
        "itemname": "Home cinema - Thermostat-current-temperature",
        "booleanoutput": false,
        "x": 300,
        "y": 90,
        "wires": [
            [
                "c1bf9a69.c87918",
                "291b9420.e9a1ec"
            ]
        ]
    },
    {
        "id": "dabcf806.14b228",
        "type": "ui_button",
        "z": "1c2088c.95ad877",
        "name": "",
        "group": "d2796fc2.b8c3e",
        "order": 1,
        "width": "2",
        "height": "1",
        "passthru": false,
        "label": "Get temp.",
        "color": "orange",
        "bgcolor": "grey",
        "icon": "fa-upload",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 147.99994277954102,
        "y": 90,
        "wires": [
            [
                "481c017d.f2371"
            ]
        ]
    },
    {
        "id": "c1bf9a69.c87918",
        "type": "ui_text",
        "z": "1c2088c.95ad877",
        "group": "d2796fc2.b8c3e",
        "order": 2,
        "width": "7",
        "height": "1",
        "name": "",
        "label": "Value from get:",
        "format": "{{msg.payload | number:2}} &degC",
        "layout": "row-left",
        "x": 560.9999923706055,
        "y": 149.00000762939453,
        "wires": []
    },
    {
        "id": "7ba8fae8.e49554",
        "type": "ui_button",
        "z": "1c2088c.95ad877",
        "name": "",
        "group": "d2796fc2.b8c3e",
        "order": 3,
        "width": "2",
        "height": "1",
        "passthru": false,
        "label": "Clear temp.",
        "color": "orange",
        "bgcolor": "grey",
        "icon": "fa-eraser",
        "payload": "0",
        "payloadType": "num",
        "topic": "",
        "x": 158.99994659423828,
        "y": 153.00000381469727,
        "wires": [
            [
                "c1bf9a69.c87918",
                "291b9420.e9a1ec"
            ]
        ]
    },
    {
        "id": "cae0fea4.c9431",
        "type": "comment",
        "z": "1c2088c.95ad877",
        "name": "Demo of a realKNX-get item printed to the dashboard text",
        "info": "* Open the realKNX-get 'Get temp.' node and select a temperature item from your system.\n* (Optional) Open the 'Get Temp.' button node and rename the Dashboard button.\n* (Optional) Activate the Debug node by clicking the pale green tab.",
        "x": 293.9658432006836,
        "y": 52.97443389892578,
        "wires": []
    },
    {
        "id": "182f248.520f3dc",
        "type": "ui_audio",
        "z": "1c2088c.95ad877",
        "name": "",
        "group": "d2796fc2.b8c3e",
        "voice": "0",
        "always": true,
        "x": 1031.9660110473633,
        "y": 90.05961608886719,
        "wires": []
    },
    {
        "id": "291b9420.e9a1ec",
        "type": "function",
        "z": "1c2088c.95ad877",
        "name": "float to string",
        "func": "function round(value, exp) {\n if (typeof exp === 'undefined' || +exp === 0)\n return Math.round(value);\n\n value = +value;\n exp = +exp;\n\n if (isNaN(value) || !(typeof exp === 'number' && exp % 1 === 0))\n return NaN;\n\n // Shift\n value = value.toString().split('e');\n value = Math.round(+(value[0] + 'e' + (value[1] ? (+value[1] + exp) : exp)));\n\n // Shift back\n value = value.toString().split('e');\n return +(value[0] + 'e' + (value[1] ? (+value[1] - exp) : -exp));\n}\n\nvar newMsg = { payload: String(round(msg.payload,2)) };\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 548.7839813232422,
        "y": 89.39770746231079,
        "wires": [
            [
                "2beb40f8.5fe85"
            ]
        ]
    },
    {
        "id": "69dc4478.a08e4c",
        "type": "realknx-out",
        "z": "1c2088c.95ad877",
        "name": "Set dimmer",
        "controller": "b1d2fbe.d184108",
        "itemname": "Home cinema - Ceiling",
        "topic": "",
        "payload": "",
        "booleaninput": false,
        "x": 954.7924423217773,
        "y": 263.5706253051758,
        "wires": []
    },
    {
        "id": "23b2d7c1.ac2388",
        "type": "range",
        "z": "1c2088c.95ad877",
        "minin": "0",
        "maxin": "100",
        "minout": "0",
        "maxout": "255",
        "action": "scale",
        "round": true,
        "name": "Scale",
        "x": 784.7866058349609,
        "y": 264.17867946624756,
        "wires": [
            [
                "69dc4478.a08e4c"
            ]
        ]
    },
    {
        "id": "e6e74826.58c178",
        "type": "ui_text",
        "z": "1c2088c.95ad877",
        "group": "5735c315.51fa7c",
        "order": 2,
        "width": "1",
        "height": "1",
        "name": "",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "x": 463.7839584350586,
        "y": 305.2072219848633,
        "wires": []
    },
    {
        "id": "91112a8f.28da08",
        "type": "comment",
        "z": "1c2088c.95ad877",
        "name": "Text-To-Speech with IBM Watson",
        "info": "To use IBM WatsonText-To-Speech (and many other services), do this:\n\n1. Install 'node-red-node-watson' from the palette. Select top right Menu | Manage palette | Install\n2. Drop a 'text to speech' node here below. Connect the output of the 'Int to String' (below) and the 'float to string' node (left) to the input of the 'text to speech'.\n2. Signup to [IBM Watson/Bluemix](https://console.bluemix.net/)\n3. Goto IBM Bluemix Application Services and activate the 'Text to Speech' service\n5. Open Service credentials and copy Username and password to the Text-To-Speech node\n6. Select language and voice.\n7. Click Get Temp button or slider, the value should now be red out.\n",
        "x": 915.7924880981445,
        "y": 50.25566101074219,
        "wires": []
    },
    {
        "id": "168a2571.1d680b",
        "type": "function",
        "z": "1c2088c.95ad877",
        "name": "Int to String",
        "func": "return { payload: String(msg.payload) };",
        "outputs": 1,
        "noerr": 0,
        "x": 774.7838363647461,
        "y": 224.40900421142578,
        "wires": [
            [
                "2beb40f8.5fe85"
            ]
        ]
    },
    {
        "id": "2beb40f8.5fe85",
        "type": "ui_toast",
        "z": "1c2088c.95ad877",
        "position": "bottom right",
        "displayTime": "3",
        "highlight": "",
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "topic": "",
        "name": "",
        "x": 1005.7926254272461,
        "y": 198.99146270751953,
        "wires": []
    },
    {
        "id": "355b6c43.d4afe4",
        "type": "delay",
        "z": "1c2088c.95ad877",
        "name": "Filter",
        "pauseType": "queue",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "2",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "x": 623.7811012268066,
        "y": 265.1930570602417,
        "wires": [
            [
                "23b2d7c1.ac2388",
                "168a2571.1d680b"
            ]
        ]
    },
    {
        "id": "d74def4d.e229",
        "type": "range",
        "z": "1c2088c.95ad877",
        "minin": "0",
        "maxin": "255",
        "minout": "0",
        "maxout": "100",
        "action": "scale",
        "round": true,
        "name": "Scale",
        "x": 285.7839584350586,
        "y": 274.17884063720703,
        "wires": [
            [
                "e6e74826.58c178",
                "101db0f4.cd4aaf"
            ]
        ]
    },
    {
        "id": "6b908f4a.fd245",
        "type": "comment",
        "z": "1c2088c.95ad877",
        "name": "Demo of a realKNX-in & out mapped to a slider",
        "info": "The realKNX-in node updates a text value and a slider in the dashboard.\n\n* The output of the slider is filtered to limit the number of messages.\n* (Optional)The output of the slider is forwarded to the Text-to-Speech and notification.\n* The range of the dimmer in this example is 0-255.\n* The input and output of the slider is scaled to 0-100 in the UI.\n\n**Note** that the slider shouldn't pass-through values to the output. \n",
        "x": 262.7840347290039,
        "y": 228.44317626953125,
        "wires": []
    },
    {
        "id": "101db0f4.cd4aaf",
        "type": "ui_slider",
        "z": "1c2088c.95ad877",
        "name": "",
        "label": "Dimmer",
        "group": "5735c315.51fa7c",
        "order": 1,
        "width": "11",
        "height": "1",
        "passthru": false,
        "topic": "",
        "min": 0,
        "max": "100",
        "step": 1,
        "x": 474.7869186401367,
        "y": 264.4827346801758,
        "wires": [
            [
                "355b6c43.d4afe4"
            ]
        ]
    },
    {
        "id": "ff75df42.afad1",
        "type": "realknx-in",
        "z": "1c2088c.95ad877",
        "name": "Dimmer",
        "controller": "b1d2fbe.d184108",
        "itemname": "Home cinema - Ceiling",
        "passthru": true,
        "booleanoutput": false,
        "outputatstartup": true,
        "x": 132.99996185302734,
        "y": 274.00000762939453,
        "wires": [
            [
                "d74def4d.e229"
            ]
        ]
    },
    {
        "id": "6ca684ff.67f0cc",
        "type": "realknx-monitor",
        "z": "1c2088c.95ad877",
        "name": "controller",
        "controller": "b1d2fbe.d184108",
        "x": 153,
        "y": 504,
        "wires": [
            [],
            [
                "48261169.d4f67"
            ],
            []
        ]
    },
    {
        "id": "b3f84572.44c8b8",
        "type": "ui_text",
        "z": "1c2088c.95ad877",
        "group": "92db7011.3d83d",
        "order": 1,
        "width": "0",
        "height": "0",
        "name": "",
        "label": "power consumption kW (update)",
        "format": "{{msg.payload}}",
        "layout": "row-center",
        "x": 540.9999618530273,
        "y": 432.4999990463257,
        "wires": []
    },
    {
        "id": "705ca04d.fa132",
        "type": "ui_chart",
        "z": "1c2088c.95ad877",
        "name": "Power consumption chart",
        "group": "92db7011.3d83d",
        "order": 2,
        "width": "0",
        "height": "0",
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "dd HH:mm",
        "interpolate": "linear",
        "nodata": "no data yet",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "2",
        "removeOlderPoints": "500",
        "removeOlderUnit": "86400",
        "cutout": 0,
        "useOneColor": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff8000",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "x": 520.9999465942383,
        "y": 469.5,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "f46b6f56.e12ae",
        "type": "ui_chart",
        "z": "1c2088c.95ad877",
        "name": "Temperature chart",
        "group": "d2796fc2.b8c3e",
        "order": 4,
        "width": "0",
        "height": "0",
        "label": "temperature (°C)",
        "chartType": "line",
        "legend": "true",
        "xformat": "dd HH:mm",
        "interpolate": "linear",
        "nodata": "be patient, no data yet",
        "dot": true,
        "ymin": "20",
        "ymax": "30",
        "removeOlder": "2",
        "removeOlderPoints": "500",
        "removeOlderUnit": "86400",
        "cutout": 0,
        "useOneColor": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff8000",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "x": 822.0000076293945,
        "y": 695.4997596740723,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "33428061.ad892",
        "type": "comment",
        "z": "1c2088c.95ad877",
        "name": "Demo of a realKNX-in item plotted in a chart",
        "info": "This demontrates how to plot two temperature values (actual and set value) in a graph.\n\n* Open the realKNX-in **Temp actual** and **Temp set** nodes and select an item from your system.\n* Open the 'Temperature chart' to configure the Dashboard Chart node.\n* Activate the Debug node by clicking the pale green tab.\n\nComments: \n* The 'Clear chart data' node will remove all data from the chart.",
        "x": 267.9630661010742,
        "y": 637.662070274353,
        "wires": []
    },
    {
        "id": "442afcb1.e12184",
        "type": "comment",
        "z": "1c2088c.95ad877",
        "name": "Demo of a realKNX-in item plotted in a chart",
        "info": "* Open the realKNX-in node 'Updates of power' and select an item from your system.\n* Open the 'Power consumption chart' to configure the chart item.\n* Activate the Debug node by clicking the pale green tabs.",
        "x": 260.9658889770508,
        "y": 396.576847076416,
        "wires": []
    },
    {
        "id": "48261169.d4f67",
        "type": "debug",
        "z": "1c2088c.95ad877",
        "name": "Debug connection errors",
        "active": true,
        "console": "false",
        "complete": "payload",
        "x": 520.9999694824219,
        "y": 509.4999523162842,
        "wires": []
    },
    {
        "id": "f2c82fe9.4bfa1",
        "type": "change",
        "z": "1c2088c.95ad877",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "actual",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 457.7813186645508,
        "y": 681.5227088928223,
        "wires": [
            [
                "f46b6f56.e12ae"
            ]
        ]
    },
    {
        "id": "fa021723.713da8",
        "type": "change",
        "z": "1c2088c.95ad877",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "set value",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 456.78418731689453,
        "y": 733.3325233459473,
        "wires": [
            [
                "f46b6f56.e12ae"
            ]
        ]
    },
    {
        "id": "d36b7413.8c6168",
        "type": "inject",
        "z": "1c2088c.95ad877",
        "name": "Clear chart data",
        "topic": "",
        "payload": "[]",
        "payloadType": "json",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 566.7869644165039,
        "y": 638.1165809631348,
        "wires": [
            [
                "f46b6f56.e12ae"
            ]
        ]
    },
    {
        "id": "a0273272.eb93",
        "type": "realknx-in",
        "z": "1c2088c.95ad877",
        "name": "Temp actual",
        "controller": "b1d2fbe.d184108",
        "itemname": "Home cinema - Thermostat-current-temperature",
        "passthru": true,
        "booleanoutput": false,
        "outputatstartup": true,
        "x": 173.00006866455078,
        "y": 681.5002479553223,
        "wires": [
            [
                "f2c82fe9.4bfa1"
            ]
        ]
    },
    {
        "id": "12ec7278.36d81e",
        "type": "realknx-in",
        "z": "1c2088c.95ad877",
        "name": "Temp set",
        "controller": "b1d2fbe.d184108",
        "itemname": "Home cinema - Thermostat",
        "passthru": true,
        "booleanoutput": false,
        "outputatstartup": true,
        "x": 163.00006866455078,
        "y": 735.5002479553223,
        "wires": [
            [
                "fa021723.713da8"
            ]
        ]
    },
    {
        "id": "d086fb3e.2f6ac8",
        "type": "realknx-in",
        "z": "1c2088c.95ad877",
        "name": "Updates of power",
        "controller": "b1d2fbe.d184108",
        "itemname": "Général - Consommation",
        "passthru": true,
        "booleanoutput": false,
        "outputatstartup": true,
        "x": 174.00006866455078,
        "y": 436.50024795532227,
        "wires": [
            [
                "b3f84572.44c8b8",
                "705ca04d.fa132"
            ]
        ]
    },
    {
        "id": "afc7c25f.d334c",
        "type": "debug",
        "z": "1c2088c.95ad877",
        "name": "Debug",
        "active": false,
        "console": "false",
        "complete": "payload",
        "x": 612,
        "y": 1005,
        "wires": []
    },
    {
        "id": "2941a2b5.98f14e",
        "type": "ui_button",
        "z": "1c2088c.95ad877",
        "name": "",
        "group": "c7b0c32a.e3bb2",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Click to 'pump'",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "1",
        "payloadType": "num",
        "topic": "mytopic",
        "x": 163.0000114440918,
        "y": 964.0001001358032,
        "wires": [
            [
                "d1d260a3.3351e"
            ]
        ]
    },
    {
        "id": "5589a1c3.92db3",
        "type": "ui_gauge",
        "z": "1c2088c.95ad877",
        "name": "",
        "group": "c7b0c32a.e3bb2",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Gauge",
        "label": "units",
        "format": "{{value}}%",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 613.0000114440918,
        "y": 964.0001001358032,
        "wires": []
    },
    {
        "id": "a41512e8.0aa94",
        "type": "ui_text",
        "z": "1c2088c.95ad877",
        "group": "317e45f8.ad2c0a",
        "order": 3,
        "width": "0",
        "height": "0",
        "name": "",
        "label": "Temperature:",
        "format": "{{msg.payload.tempc}} &degC",
        "layout": "row-left",
        "x": 749.9999923706055,
        "y": 827.0002088546753,
        "wires": []
    },
    {
        "id": "44946ff4.332fb",
        "type": "ui_text",
        "z": "1c2088c.95ad877",
        "group": "317e45f8.ad2c0a",
        "order": 1,
        "width": "0",
        "height": "0",
        "name": "",
        "label": "Location:",
        "format": "{{msg.payload.location}}",
        "layout": "row-left",
        "x": 443.00001525878906,
        "y": 825.0001363754272,
        "wires": []
    },
    {
        "id": "1f554d03.7b26d3",
        "type": "ui_text",
        "z": "1c2088c.95ad877",
        "group": "317e45f8.ad2c0a",
        "order": 2,
        "width": "0",
        "height": "0",
        "name": "",
        "label": "Weather:",
        "format": "{{msg.payload.detail }}",
        "layout": "row-left",
        "x": 594.0000228881836,
        "y": 824.0001630783081,
        "wires": []
    },
    {
        "id": "d1d260a3.3351e",
        "type": "function",
        "z": "1c2088c.95ad877",
        "name": "increase",
        "func": "function getRandomInt(min, max) {\n return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nif (!context.global.count) {\n context.global.count = 0;\n}\ncontext.global.count += getRandomInt(2,7);\ncontext.global.count = context.global.count>=100?100:context.global.count;\nmsg.payload = context.global.count;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 343.0000114440918,
        "y": 964.0001001358032,
        "wires": [
            [
                "5589a1c3.92db3",
                "afc7c25f.d334c"
            ]
        ]
    },
    {
        "id": "fa5fb2a9.445a3",
        "type": "function",
        "z": "1c2088c.95ad877",
        "name": "decrease",
        "func": "function getRandomInt(min, max) {\n return Math.floor(Math.random() * (max - min + 1)) + min;\n}\nif (context.global.count > 0) {\n context.global.count -= getRandomInt(1,5);\n context.global.count = context.global.count<=0?0:context.global.count;\n}\nmsg.payload = context.global.count;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 342,
        "y": 1005,
        "wires": [
            [
                "5589a1c3.92db3",
                "afc7c25f.d334c"
            ]
        ]
    },
    {
        "id": "8463f333.fefd9",
        "type": "interval",
        "z": "1c2088c.95ad877",
        "name": "interval",
        "interval": "1",
        "onstart": false,
        "msg": "1",
        "showstatus": false,
        "unit": "seconds",
        "statusformat": "YYYY-MM-D HH:mm:ss",
        "x": 132,
        "y": 1005,
        "wires": [
            [
                "fa5fb2a9.445a3"
            ]
        ]
    },
    {
        "id": "65964e6b.6fc93",
        "type": "comment",
        "z": "1c2088c.95ad877",
        "name": "Demo of logical function",
        "info": "This demonstrates how function nodes can be used for creating powerful logic.",
        "x": 180.96305465698242,
        "y": 929.7131471633911,
        "wires": []
    },
    {
        "id": "6a6ba90e.cb5b88",
        "type": "comment",
        "z": "1c2088c.95ad877",
        "name": "Demo of openweathermap",
        "info": "Sign-up for a API-key at https://openweathermap.org/api\nand add the 'openweathermap' node.",
        "x": 193.96307373046875,
        "y": 830.7103414535522,
        "wires": []
    },
    {
        "id": "4308c784.4328b8",
        "type": "ui_text",
        "z": "1c2088c.95ad877",
        "group": "317e45f8.ad2c0a",
        "order": 0,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Humidity",
        "format": "{{msg.payload.humidity}} %",
        "layout": "row-left",
        "x": 445.79261779785156,
        "y": 878.5711030960083,
        "wires": []
    },
    {
        "id": "6de1c7d9.61b198",
        "type": "ui_text",
        "z": "1c2088c.95ad877",
        "group": "317e45f8.ad2c0a",
        "order": 0,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "windspeed ",
        "format": "{{msg.payload.windspeed}} m/s",
        "layout": "row-left",
        "x": 602.7812652587891,
        "y": 878.5711030960083,
        "wires": []
    },
    {
        "id": "8ad10d4a.d520d",
        "type": "ui_text",
        "z": "1c2088c.95ad877",
        "group": "317e45f8.ad2c0a",
        "order": 0,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "winddirection ",
        "format": "{{msg.payload.winddirection }} &deg",
        "layout": "row-left",
        "x": 754.7840728759766,
        "y": 878.5711030960083,
        "wires": []
    },
    {
        "id": "beee542d.f6b868",
        "type": "openweathermap in",
        "z": "1c2088c.95ad877",
        "name": "",
        "lon": "",
        "lat": "",
        "city": "Valbonne",
        "country": "France",
        "language": "en",
        "x": 163.00001525878906,
        "y": 865.0001363754272,
        "wires": [
            [
                "44946ff4.332fb",
                "1f554d03.7b26d3",
                "a41512e8.0aa94",
                "4308c784.4328b8",
                "6de1c7d9.61b198",
                "8ad10d4a.d520d"
            ]
        ]
    },
    {
        "id": "b1d2fbe.d184108",
        "type": "realknx-controller",
        "z": "",
        "name": "realknx-ctrl",
        "host": "localhost",
        "port": "3000"
    },
    {
        "id": "d2796fc2.b8c3e",
        "type": "ui_group",
        "z": "",
        "name": "Temperature",
        "tab": "600190b.f163c7",
        "order": 3,
        "disp": true,
        "width": "12"
    },
    {
        "id": "5735c315.51fa7c",
        "type": "ui_group",
        "z": "",
        "name": "Slider",
        "tab": "600190b.f163c7",
        "order": 1,
        "disp": true,
        "width": "12"
    },
    {
        "id": "92db7011.3d83d",
        "type": "ui_group",
        "z": "",
        "name": "Power",
        "tab": "600190b.f163c7",
        "order": 2,
        "disp": true,
        "width": "12"
    },
    {
        "id": "c7b0c32a.e3bb2",
        "type": "ui_group",
        "z": "",
        "name": "Button & gauge",
        "tab": "1933e77c.6ae579",
        "order": 2,
        "disp": true,
        "width": "12"
    },
    {
        "id": "317e45f8.ad2c0a",
        "type": "ui_group",
        "z": "",
        "name": "Weather stuff",
        "tab": "d7305a90.182b28",
        "order": 1,
        "disp": true,
        "width": "12"
    },
    {
        "id": "600190b.f163c7",
        "type": "ui_tab",
        "z": "",
        "name": "realKNX",
        "icon": "dashboard",
        "order": 1
    },
    {
        "id": "1933e77c.6ae579",
        "type": "ui_tab",
        "z": "",
        "name": "Functions",
        "icon": "dashboard",
        "order": 3
    },
    {
        "id": "d7305a90.182b28",
        "type": "ui_tab",
        "z": "",
        "name": "Weather",
        "icon": "dashboard",
        "order": 4
    }
]